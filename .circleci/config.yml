# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    # Use "machine" instead of e.g. "docker" for better/faster results
    machine: true
    # Uses a "medium" sized machine - maybe increase this to "large" if you pay for CircleCI
    resource_class: medium
    environment:
      MAVEN_OPTS: -Xmx6400m
      # Set the GRAALVM_HOME env variable to the location where we will be installing GraalVM
      GRAALVM_HOME: /home/circleci/repo/.graalvm

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      - store_test_results:
          path: test-results

      # Download maven dependencies so that we can cache them
      # ########################
      - run:
          name: Download Dependencies
          command: mvn dependency:go-offline

#      - run:
#          name: Setup maven
#          commnd: mvn -N io.takari:maven:wrapper
#          command: mvn -N io.takari:maven:wrapper -Dmaven=3.5.2


      # Standard maven build and test phases - does not perform a native build (or verify)
      # ########################
      - run:
          name: Build (Standard)
          command: ./mvnw clean package -DskipTests -Dmaven.test.skip=true
      - run:
          name: Verify (Standard)
          command: ./mvnw -Daws.region=eu-west-2 test



#      - run: mvn package install -Dmaven.test.skip=true
#      - run: mvn dependency:go-offline



      # run tests!
      #- run: mvn integration-test
      - run: mvn -Dprofile=test test
